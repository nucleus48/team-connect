/* tslint:disable */
/* eslint-disable */
/**
 * Team Connect
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  LogInDto,
  SignUpDto,
  TokensEntity,
} from '../models/index';
import {
    LogInDtoFromJSON,
    LogInDtoToJSON,
    SignUpDtoFromJSON,
    SignUpDtoToJSON,
    TokensEntityFromJSON,
    TokensEntityToJSON,
} from '../models/index';

export interface AuthControllerLoginRequest {
    logInDto: LogInDto;
}

export interface AuthControllerSignupRequest {
    signUpDto: SignUpDto;
}

/**
 * 
 */
export class AuthApi extends runtime.BaseAPI {

    /**
     */
    async authControllerLoginRaw(requestParameters: AuthControllerLoginRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TokensEntity>> {
        if (requestParameters['logInDto'] == null) {
            throw new runtime.RequiredError(
                'logInDto',
                'Required parameter "logInDto" was null or undefined when calling authControllerLogin().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/auth/login`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: LogInDtoToJSON(requestParameters['logInDto']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TokensEntityFromJSON(jsonValue));
    }

    /**
     */
    async authControllerLogin(requestParameters: AuthControllerLoginRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TokensEntity> {
        const response = await this.authControllerLoginRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async authControllerSignupRaw(requestParameters: AuthControllerSignupRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TokensEntity>> {
        if (requestParameters['signUpDto'] == null) {
            throw new runtime.RequiredError(
                'signUpDto',
                'Required parameter "signUpDto" was null or undefined when calling authControllerSignup().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/auth/signup`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SignUpDtoToJSON(requestParameters['signUpDto']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TokensEntityFromJSON(jsonValue));
    }

    /**
     */
    async authControllerSignup(requestParameters: AuthControllerSignupRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TokensEntity> {
        const response = await this.authControllerSignupRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
